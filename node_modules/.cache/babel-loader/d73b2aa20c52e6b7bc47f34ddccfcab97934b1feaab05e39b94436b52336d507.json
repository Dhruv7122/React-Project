{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport cartReducer from './cartSlice';\nconst loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('cartState');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    console.error(\"Could not load state\", err);\n    return undefined;\n  }\n};\nconst saveState = state => {\n  try {\n    const serializedState = JSON.stringify(state.cart);\n    localStorage.setItem('cartState', serializedState);\n  } catch (err) {\n    console.error(\"Could not save state\", err);\n  }\n};\nconst preloadedState = loadState();\nconst store = configureStore({\n  reducer: {\n    cart: cartReducer\n  },\n  preloadedState: {\n    cart: preloadedState\n  }\n});\nstore.subscribe(() => {\n  saveState(store.getState());\n});\nexport default store;","map":{"version":3,"names":["configureStore","cartReducer","loadState","serializedState","localStorage","getItem","undefined","JSON","parse","err","console","error","saveState","state","stringify","cart","setItem","preloadedState","store","reducer","subscribe","getState"],"sources":["C:/DHRUV/reactTask/Archive/src/Store/store.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport cartReducer from './cartSlice';\n\nconst loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('cartState');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    console.error(\"Could not load state\", err);\n    return undefined;\n  }\n};\n\nconst saveState = (state: RootState) => {\n  try {\n    const serializedState = JSON.stringify(state.cart);\n    localStorage.setItem('cartState', serializedState);\n  } catch (err) {\n    console.error(\"Could not save state\", err);\n  }\n};\n\nconst preloadedState = loadState();\n\nconst store = configureStore({\n  reducer: {\n    cart: cartReducer,\n  },\n  preloadedState: {\n    cart: preloadedState,\n  },\n});\n\nstore.subscribe(() => {\n  saveState(store.getState());\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,WAAW,MAAM,aAAa;AAErC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB,IAAI;IACF,MAAMC,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACzD,IAAIF,eAAe,KAAK,IAAI,EAAE;MAC5B,OAAOG,SAAS;IAClB;IACA,OAAOC,IAAI,CAACC,KAAK,CAACL,eAAe,CAAC;EACpC,CAAC,CAAC,OAAOM,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC;IAC1C,OAAOH,SAAS;EAClB;AACF,CAAC;AAED,MAAMM,SAAS,GAAIC,KAAgB,IAAK;EACtC,IAAI;IACF,MAAMV,eAAe,GAAGI,IAAI,CAACO,SAAS,CAACD,KAAK,CAACE,IAAI,CAAC;IAClDX,YAAY,CAACY,OAAO,CAAC,WAAW,EAAEb,eAAe,CAAC;EACpD,CAAC,CAAC,OAAOM,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC;EAC5C;AACF,CAAC;AAED,MAAMQ,cAAc,GAAGf,SAAS,CAAC,CAAC;AAElC,MAAMgB,KAAK,GAAGlB,cAAc,CAAC;EAC3BmB,OAAO,EAAE;IACPJ,IAAI,EAAEd;EACR,CAAC;EACDgB,cAAc,EAAE;IACdF,IAAI,EAAEE;EACR;AACF,CAAC,CAAC;AAEFC,KAAK,CAACE,SAAS,CAAC,MAAM;EACpBR,SAAS,CAACM,KAAK,CAACG,QAAQ,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC;AAKF,eAAeH,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}