{"ast":null,"code":"// Store/cartSlice.ts\n\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  items: JSON.parse(localStorage.getItem('cartState') || '[]') || [] // Initialize from localStorage\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addItem(state, action) {\n      const {\n        id,\n        name,\n        price,\n        quantity,\n        image,\n        userId\n      } = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      if (existingItem) {\n        if (existingItem.quantity < 5) {\n          existingItem.quantity += quantity;\n        }\n      } else {\n        state.items.push({\n          id,\n          name,\n          price,\n          quantity,\n          image,\n          userId\n        });\n      }\n      localStorage.setItem('cartState', JSON.stringify(state.items)); // Update localStorage\n    },\n    decreaseItem(state, action) {\n      const itemId = action.payload;\n      const existingItem = state.items.find(item => item.id === itemId);\n      if (existingItem) {\n        if (existingItem.quantity > 1) {\n          existingItem.quantity -= 1;\n        } else {\n          state.items = state.items.filter(item => item.id !== itemId);\n        }\n      }\n      localStorage.setItem('cartState', JSON.stringify(state.items)); // Update localStorage\n    },\n    increaseItem(state, action) {\n      const itemId = action.payload;\n      const existingItem = state.items.find(item => item.id === itemId);\n      if (existingItem) {\n        if (existingItem.quantity < 5) {\n          existingItem.quantity += 1;\n        }\n      }\n      localStorage.setItem('cartState', JSON.stringify(state.items)); // Update localStorage\n    },\n    removeItem(state, action) {\n      state.items = state.items.filter(item => item.id !== action.payload);\n      localStorage.setItem('cartState', JSON.stringify(state.items)); // Update localStorage\n    },\n    clearCart(state) {\n      state.items = [];\n      localStorage.removeItem('cartState'); // Clear localStorage\n    },\n    updateUserId(state, action) {\n      const userId = action.payload;\n      state.items.forEach(item => {\n        item.userId = userId;\n      });\n      localStorage.setItem('cartState', JSON.stringify(state.items)); // Update localStorage\n    }\n  }\n});\nexport const {\n  addItem,\n  decreaseItem,\n  removeItem,\n  clearCart,\n  increaseItem,\n  updateUserId\n} = cartSlice.actions;\nexport const selectCartItems = state => state.cart.items;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","items","JSON","parse","localStorage","getItem","cartSlice","name","reducers","addItem","state","action","id","price","quantity","image","userId","payload","existingItem","find","item","push","setItem","stringify","decreaseItem","itemId","filter","increaseItem","removeItem","clearCart","updateUserId","forEach","actions","selectCartItems","cart","reducer"],"sources":["C:/DHRUV/reactTask/Archive/src/Store/cartSlice.ts"],"sourcesContent":["// Store/cartSlice.ts\n\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from './store';\n\nexport interface CartItem {\n  id: string;\n  name: string;\n  price: number;\n  quantity: number;\n  image: string;\n  userId: string | null; // Updated to explicitly include null for logged-out state\n}\n\ninterface CartState {\n  items: CartItem[];\n}\n\nconst initialState: CartState = {\n  items: JSON.parse(localStorage.getItem('cartState') || '[]') || [], // Initialize from localStorage\n};\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addItem(state, action: PayloadAction<CartItem>) {\n      const { id, name, price, quantity, image, userId } = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      if (existingItem) {\n        if (existingItem.quantity < 5) {\n          existingItem.quantity += quantity;\n        }\n      } else {\n        state.items.push({ id, name, price, quantity, image, userId });\n      }\n      localStorage.setItem('cartState', JSON.stringify(state.items)); // Update localStorage\n    },\n    decreaseItem(state, action: PayloadAction<string>) {\n      const itemId = action.payload;\n      const existingItem = state.items.find(item => item.id === itemId);\n      if (existingItem) {\n        if (existingItem.quantity > 1) {\n          existingItem.quantity -= 1;\n        } else {\n          state.items = state.items.filter(item => item.id !== itemId);\n        }\n      }\n      localStorage.setItem('cartState', JSON.stringify(state.items)); // Update localStorage\n    },\n    increaseItem(state, action: PayloadAction<string>) {\n      const itemId = action.payload;\n      const existingItem = state.items.find(item => item.id === itemId);\n      if (existingItem) {\n        if (existingItem.quantity < 5) {\n          existingItem.quantity += 1;\n        }\n      }\n      localStorage.setItem('cartState', JSON.stringify(state.items)); // Update localStorage\n    },\n    removeItem(state, action: PayloadAction<string>) {\n      state.items = state.items.filter(item => item.id !== action.payload);\n      localStorage.setItem('cartState', JSON.stringify(state.items)); // Update localStorage\n    },\n    clearCart(state) {\n      state.items = [];\n      localStorage.removeItem('cartState'); // Clear localStorage\n    },\n    updateUserId(state, action: PayloadAction<string>) {\n      const userId = action.payload;\n      state.items.forEach(item => {\n        item.userId = userId;\n      });\n      localStorage.setItem('cartState', JSON.stringify(state.items)); // Update localStorage\n    },\n  },\n});\n\nexport const { addItem, decreaseItem, removeItem, clearCart, increaseItem, updateUserId } = cartSlice.actions;\n\nexport const selectCartItems = (state: RootState) => state.cart.items;\n\nexport default cartSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}