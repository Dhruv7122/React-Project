{"ast":null,"code":"var _jsxFileName = \"C:\\\\DHRUV\\\\reactTask\\\\Archive\\\\src\\\\Component\\\\Products.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom'; // Import Link from react-router-dom\nimport { ProductCard } from './ProductCard';\nimport { getAllProducts } from '../Service/product';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Products = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const data = await getAllProducts();\n        setProducts(data);\n        console.log(data); // Log the updated data, not 'products'\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    };\n    getProducts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mx-auto max-w-7xl px-4 py-8 sm:px-6 sm:py-24 lg:px-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"sr-only\",\n        children: \"Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 gap-x-6 gap-y-10 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 xl:gap-x-8\",\n        children: products.slice(0, 8).map(product => /*#__PURE__*/_jsxDEV(ProductCard, {\n          product: product\n        }, product._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mx-auto max-w-7xl px-4 sm:px-6 sm:py-6 lg:px-8 flex justify-center items-center mt-8\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/all-products\",\n          className: \"text-white text-xl hover:text-gray-200\",\n          children: \"See More Products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n          fill: \"none\",\n          stroke: \"currentColor\",\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          strokeWidth: \"2\",\n          className: \"w-4 h-4 ml-2 text-white font-extrabold\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M5 12h14M12 5l7 7-7 7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Products, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = Products;\nexport default Products;\nvar _c;\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"names":["React","useEffect","useState","Link","ProductCard","getAllProducts","jsxDEV","_jsxDEV","Products","_s","products","setProducts","getProducts","data","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","product","_id","to","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","viewBox","d","_c","$RefreshReg$"],"sources":["C:/DHRUV/reactTask/Archive/src/Component/Products.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom'; // Import Link from react-router-dom\nimport { ProductCard } from './ProductCard';\nimport { ProductType, getAllProducts } from '../Service/product';\n\nconst Products = () => {\n  const [products, setProducts] = useState<ProductType[]>([]);\n\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const data: ProductType[] = await getAllProducts();\n        setProducts(data);\n        console.log(data); // Log the updated data, not 'products'\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    };\n    getProducts();\n  }, []);\n\n  return (\n    <div className=\"\">\n      <div className=\"mx-auto max-w-7xl px-4 py-8 sm:px-6 sm:py-24 lg:px-8\">\n        <h2 className=\"sr-only\">Products</h2>\n\n        <div className=\"grid grid-cols-1 gap-x-6 gap-y-10 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 xl:gap-x-8\">\n          {products.slice(0,8).map((product) => (\n            <ProductCard key={product._id} product={product} />\n          ))}\n        </div>\n\n        <div className=\"mx-auto max-w-7xl px-4 sm:px-6 sm:py-6 lg:px-8 flex justify-center items-center mt-8\">\n          {/* Replace '#' with the actual route where you want to navigate */}\n          <Link to=\"/all-products\" className=\"text-white text-xl hover:text-gray-200\">\n            See More Products\n          </Link>\n          <svg\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2\"\n            className=\"w-4 h-4 ml-2 text-white font-extrabold\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path d=\"M5 12h14M12 5l7 7-7 7\"></path>\n          </svg>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Products;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB,CAAC,CAAC;AACzC,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAAsBC,cAAc,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAgB,EAAE,CAAC;EAE3DD,SAAS,CAAC,MAAM;IACd,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,IAAmB,GAAG,MAAMR,cAAc,CAAC,CAAC;QAClDM,WAAW,CAACE,IAAI,CAAC;QACjBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC,CAAC;MACrB,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IACDJ,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKU,SAAS,EAAC,EAAE;IAAAC,QAAA,eACfX,OAAA;MAAKU,SAAS,EAAC,sDAAsD;MAAAC,QAAA,gBACnEX,OAAA;QAAIU,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAErCf,OAAA;QAAKU,SAAS,EAAC,2FAA2F;QAAAC,QAAA,EACvGR,QAAQ,CAACa,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAACC,GAAG,CAAEC,OAAO,iBAC/BlB,OAAA,CAACH,WAAW;UAAmBqB,OAAO,EAAEA;QAAQ,GAA9BA,OAAO,CAACC,GAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAqB,CACnD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENf,OAAA;QAAKU,SAAS,EAAC,sFAAsF;QAAAC,QAAA,gBAEnGX,OAAA,CAACJ,IAAI;UAACwB,EAAE,EAAC,eAAe;UAACV,SAAS,EAAC,wCAAwC;UAAAC,QAAA,EAAC;QAE5E;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACPf,OAAA;UACEqB,IAAI,EAAC,MAAM;UACXC,MAAM,EAAC,cAAc;UACrBC,aAAa,EAAC,OAAO;UACrBC,cAAc,EAAC,OAAO;UACtBC,WAAW,EAAC,GAAG;UACff,SAAS,EAAC,wCAAwC;UAClDgB,OAAO,EAAC,WAAW;UAAAf,QAAA,eAEnBX,OAAA;YAAM2B,CAAC,EAAC;UAAuB;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACb,EAAA,CA/CID,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAiDd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}